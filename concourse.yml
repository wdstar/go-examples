---
# Concourse pipeline: go-examples
#   $ fly -t $CC_TARGET sp -p go-examples -c concourse.yml -l fly-vars.yml -l ~/sec/credentials-prod.yml
resources:
- name: src
  type: git
  source:
    uri: https://github.com/wdstar/go-examples
    branch: master
- name: build-image
  type: docker-image
  source:
    repository: golang
    tag: ((golang-version))
    registry_mirror: https://((registry-mirror-domain))
      # e.g. https://registry.docker.example.com:5000
    ca_certs:
    - domain: ((registry-mirror-domain))
      # e.g. registry.docker.example.com:5000
      cert: ((docker-reg-ca-cert))
  check_every: 1h

jobs:
- name: test
  plan:
  - aggregate:
    - get: src
      params:
        depth: 5
      trigger: true
    - get: build-image
  - task: test
    image: build-image
    config:
      platform: linux
      inputs:
      - name: src
      params:
        GO111MODULE: "on"
      run:
        path: sh
        args:
        - -c
        - |
          env
          echo ''
          echo 'Installing tools ...'
          go get -v -u golang.org/x/lint/golint
          # for non go module
          #export SRC_ROOT=${GOPATH}/src/github.com/wdstar/go-examples
          #mkdir -p $SRC_ROOT
          #cp -r ./src/* $SRC_ROOT
          #cd $SRC_ROOT
          cd ./src
          echo ''
          echo 'go mod download ...'
          go mod download
          echo ''
          echo 'go vet ...'
          go vet -v ./...
          echo ''
          echo 'golint ...'
          go list ./... | grep -v /vendor/ | xargs -n 1 golint -set_exit_status
          echo ''
          echo 'go test ...'
          go test -v -cover ./...
- name: publish
  plan:
  - aggregate:
    - get: src
      params:
        depth: 5
      passed: [test]
      trigger: true
    - get: build-image
  - task: publish
    image: build-image
    config:
      platform: linux
      inputs:
      - name: src
      params:
        GO111MODULE: "on"
        # for goreleaser
        GITHUB_TOKEN: ((github-token))
      run:
        path: sh
        args:
        - -c
        - |
          curl -sL -o /usr/local/bin/goreleaser https://git.io/goreleaser
          chmod 755 /usr/local/bin/goreleaser
          echo 'goreleaser:'
          goreleaser -v
          cd ./src
          goreleaser --snapshot --skip-publish --rm-dist
          ./dist/go-examples_linux_amd64/go-examples
